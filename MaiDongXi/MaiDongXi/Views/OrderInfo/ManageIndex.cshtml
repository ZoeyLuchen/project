@{
    ViewData["Title"] = "订单列表";
}
@section Css{
    <style type="text/css">
        .el-table .warning-row {
            background: oldlace;
        }

        .el-table .success-row {
            background: #f0f9eb;
        }
        .screen-in {
            display: inline-block;
            margin: 0px 20px 10px 0;
        }
        .spanLeft {
            display: inline-block;
            margin-left: 0px;
        }
        .inputdaohang {
            width: 195px;
        }
        .pagination {
            text-align: center;
            margin-top: 24px;
        }
    </style>
}

<div id="mainApp">
    <div class="screen">
        <div class="screen-in">
            <span>订单状态：</span>
            <el-select v-model="status" placeholder="请选择订单状态">
                <el-option v-for="(item,index) in orderStatusList" :key="index" :label="item.text" :value="item.val">
                </el-option>
            </el-select>
        </div>
        <div class="screen-in">
            <span class="spanLeft">收货人姓名：</span>
            <el-input class="inputdaohang" v-model="consignee" placeholder="请输入收货人姓名"></el-input>
        </div>
        <div class="screen-in">
            <span class="spanLeft">收货人手机：</span>
            <el-input class="inputdaohang" v-model="phone" placeholder="请输入收货人手机"></el-input>
        </div>
        <div class="screen-in">
            <span class="spanLeft">创建时间：</span>
            <el-date-picker v-model="createDate" type="daterange" range-separator="至" start-placeholder="开始日期" end-placeholder="结束日期">
            </el-date-picker>
        </div>

        <div class="screen-in screen-in2">
            <el-button class="marginlr" type="primary" v-on:click="searchClick">搜索</el-button>
        </div>
    </div>

    <el-table :data="tableData" style="width: 100%" :row-class-name="tableRowClassName">
        <el-table-column prop="orderNo" label="订单编号" width="120"></el-table-column>
        <el-table-column prop="consignee" label="收货人" width="80"></el-table-column>
        <el-table-column prop="address" label="收货地址" width="240"></el-table-column>
        <el-table-column prop="phone" label="收货电话" width="80"></el-table-column>
        <el-table-column prop="specificationDesc" label="规格描述" width="180"></el-table-column>
        <el-table-column prop="buyQuantity" label="购买数量" width="80"></el-table-column>
        <el-table-column prop="orderAmount" label="订单金额" width="80"></el-table-column>
        <el-table-column prop="status" label="订单状态" width="80"></el-table-column>
        <el-table-column prop="message" label="留言" width="240"></el-table-column>
        <el-table-column prop="createTime" label="创建时间" width="80"></el-table-column>
        <el-table-column prop="operation" label="操作" width="120">
            <template slot-scope="scope">
                <label >编辑</label>
                <label >删除</label>
            </template>
        </el-table-column>
    </el-table>
    <div class="pagination" v-if="totalCount!=0">
        <el-pagination background
                       layout="prev, pager, next"
                       :total="totalCount"
                       v-on:current-change="handleCurrentChange"
                       :current-page="pageIndex"
                       :page-size="pageSize">
        </el-pagination>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        headerApp.activeIndex = "2";
        var mainApp = new Vue({
            el: "#mainApp",
            data: {
                pageSize: 10,
                pageIndex: 1,
                totalCount: 0,
                orderStatusList: [
                    { "val": 0, "text": "全部" },
                    { "val": 1, "text": "已下单" },
                    { "val": 2, "text": "已发货" },
                    { "val": 3, "text": "已签收" },
                    { "val": 4, "text": "拒绝签收" },
                    { "val": 5, "text": "快件丢失" },
                ],
                status: 0,
                consignee: "",
                phone: "",
                createDate: "",
                tableData: []
            },
            mounted: function () {
                var _that = this;
                this.$nextTick(function () {
                    _that.getOrdersList();
                });
            },
            methods: {
                tableRowClassName({ row, rowIndex }) {
                    if (rowIndex === 1) {
                        return 'warning-row';
                    } else if (rowIndex === 3) {
                        return 'success-row';
                    }
                    return '';
                },
                searchClick: function () {
                    this.getOrdersList();
                },
                getOrdersList: function () {
                    var _that = this;
                    axios.get("/OrderInfo/GetListByPages", {
                        params: {
                            status: _that.status,
                            consignee: _that.consignee,
                            phone: _that.phone,
                            beginTime: _that.createDate == null ? "" : _that.createDate[0],
                            endTime: _that.createDate == null ? "" : _that.createDate[1],
                            pageSize: _that.pageSize,
                            pageIndex: _that.pageIndex
                        }
                    }).then(function (res) {
                        var data = res.data;
                        if (data.code == 200) {
                            data = data.data;
                            data.items.forEach(function (e) {
                                e.createTime = dateFtt(e.createTime);
                            })
                            _that.tableData = data.items;
                            _that.totalCount = data.totalCount;
                        }
                    });
                },
                handleCurrentChange: function () {
                    this.pageIndex = pageIndex;
                    this.getOrdersList();
                }
            }
        })
    </script>
}
