@{
    ViewData["Title"] = "订单列表";
}
@section Css{
    <link rel="stylesheet" href="https://www.kdniao.com/OutDemo/KDNWidget/KDNWidget.css" />
    <style type="text/css">
        .el-table .warning-row {
            background: oldlace;
        }

        .el-table .success-row {
            background: #f0f9eb;
        }

        .screen-in {
            display: inline-block;
            margin: 0px 20px 10px 0;
        }

        .spanLeft {
            display: inline-block;
            margin-left: 0px;
        }

        .inputdaohang {
            width: 195px;
        }

        .pagination {
            text-align: center;
            margin-top: 24px;
        }
    </style>
}

<div id="mainApp">
    <div class="screen">
        <div class="screen-in">
            <span>订单状态：</span>
            <el-select v-model="status" placeholder="请选择订单状态">
                <el-option v-for="(item,index) in orderStatusList" :key="index" :label="item.text" :value="item.val">
                </el-option>
            </el-select>
        </div>
        <div class="screen-in">
            <span class="spanLeft">收货人姓名：</span>
            <el-input class="inputdaohang" v-model="consignee" placeholder="请输入收货人姓名"></el-input>
        </div>
        <div class="screen-in">
            <span class="spanLeft">收货人手机：</span>
            <el-input class="inputdaohang" v-model="phone" placeholder="请输入收货人手机"></el-input>
        </div>
        <div class="screen-in">
            <span class="spanLeft">创建时间：</span>
            <el-date-picker v-model="createDate" type="daterange" range-separator="至" start-placeholder="开始日期" end-placeholder="结束日期">
            </el-date-picker>
        </div>

        <div class="screen-in screen-in2">
            <el-button class="marginlr" type="primary" v-on:click="searchClick">搜索</el-button>
        </div>
    </div>

    <el-table :data="tableData" style="width: 100%" :row-class-name="tableRowClassName">
        <el-table-column prop="orderNo" label="订单编号" width="120"></el-table-column>
        <el-table-column prop="consignee" label="收货人" width="80"></el-table-column>
        <el-table-column prop="phone" label="收货电话" width="80"></el-table-column>
        <el-table-column prop="specificationDesc" label="规格描述" width="180"></el-table-column>
        <el-table-column prop="buyQuantity" label="购买数量" width="80"></el-table-column>
        <el-table-column prop="orderAmount" label="订单金额" width="80"></el-table-column>
        <el-table-column prop="status" label="订单状态" width="80">
            <template slot-scope="scope">
                <span v-text="getStatusText(scope.row.status)"></span>
            </template>
        </el-table-column>
        <el-table-column prop="message" label="留言" width="180"></el-table-column>
        <el-table-column prop="remarks" label="发货备注" width="180"></el-table-column>
        <el-table-column prop="createTime" label="创建时间" width="100"></el-table-column>
        <el-table-column prop="operation" label="操作" width="120">
            <template slot-scope="scope">
                <label v-if="scope.row.status == 1" v-on:click="goSend(scope.row)">去发货</label>
                <label v-if="scope.row.status != 1" v-on:click="showKdnInfo(scope.row)">快递信息</label>
                <label v-if="scope.row.status != 1">状态修改</label>
                <label v-if="scope.row.status == 1">删除</label>
            </template>
        </el-table-column>
    </el-table>
    <div class="pagination" v-if="totalCount!=0">
        <el-pagination background
                       layout="prev, pager, next"
                       :total="totalCount"
                       v-on:current-change="handleCurrentChange"
                       :current-page="pageIndex"
                       :page-size="pageSize">
        </el-pagination>
    </div>
    <el-dialog title="发货" :visible.sync="sendDialogVisible">
        <el-form :model="sendGoodsModel" ref="sendGoodsModel" label-width="120px">
            <el-form-item label="收件人:">
                <label v-text="sendGoodsModel.consignee"></label>
            </el-form-item>
            <el-form-item label="收货电话:">
                <label v-text="sendGoodsModel.phone"></label>
            </el-form-item>
            <el-form-item label="收货地址:">
                <label v-text="sendGoodsModel.address"></label>
            </el-form-item>
            <el-form-item label="规格描述:">
                <label v-text="sendGoodsModel.specificationDesc"></label>
            </el-form-item>
            <el-form-item label="留言:">
                <label v-text="sendGoodsModel.address"></label>
            </el-form-item>
            <el-form-item label="快递公司:">
                <el-select v-model="sendGoodsModel.courierCompany" placeholder="请选择快递公司">
                    <el-option label="百世快递" value="百世快递"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="快递单号:">
                <el-input v-model="sendGoodsModel.trackingNo" style="width:400px"></el-input>
            </el-form-item>
            <el-form-item label="备注:">
                <el-input v-model="sendGoodsModel.remarks" type="textarea" rows="3" style="width:400px"></el-input>
            </el-form-item>
        </el-form>
        <div slot="footer" class="dialog-footer">
            <el-button v-on:click="sendDialogVisible = false">取 消</el-button>
            <el-button type="primary" v-on:click="submitSendGoods">确 定</el-button>
        </div>
    </el-dialog>
</div>
<div id="demoID"></div>

@section Scripts{
    <script type="text/javascript">
        headerApp.activeIndex = "2";
        var mainApp = new Vue({
            el: "#mainApp",
            data: {
                pageSize: 10,
                pageIndex: 1,
                totalCount: 0,
                orderStatusList: [
                    { "val": 0, "text": "全部" },
                    { "val": 1, "text": "已下单" },
                    { "val": 2, "text": "已发货" },
                    { "val": 3, "text": "已签收" },
                    { "val": 4, "text": "拒绝签收" },
                    { "val": 5, "text": "快件丢失" },
                ],
                status: 0,
                consignee: "",
                phone: "",
                createDate: "",
                tableData: [],
                sendDialogVisible: false,
                sendGoodsModel: {}
            },
            mounted: function () {
                var _that = this;
                this.$nextTick(function () {
                    _that.getOrdersList();
                });
            },
            methods: {
                tableRowClassName({ row, rowIndex }) {
                    if (rowIndex === 1) {
                        return 'warning-row';
                    } else if (rowIndex === 3) {
                        return 'success-row';
                    }
                    return '';
                },
                searchClick: function () {
                    this.getOrdersList();
                },
                getOrdersList: function () {
                    var _that = this;
                    axios.get("/OrderInfo/GetListByPages", {
                        params: {
                            status: _that.status,
                            consignee: _that.consignee,
                            phone: _that.phone,
                            beginTime: _that.createDate == null ? "" : _that.createDate[0],
                            endTime: _that.createDate == null ? "" : _that.createDate[1],
                            pageSize: _that.pageSize,
                            pageIndex: _that.pageIndex
                        }
                    }).then(function (res) {
                        var data = res.data;
                        if (data.code == 200) {
                            data = data.data;
                            data.items.forEach(function (e) {
                                e.createTime = dateFtt(e.createTime);
                            })
                            _that.tableData = data.items;
                            _that.totalCount = data.totalCount;
                        }
                    });
                },
                handleCurrentChange: function () {
                    this.pageIndex = pageIndex;
                    this.getOrdersList();
                },
                getStatusText: function (status) {
                    var statusText = "";
                    switch (status) {
                        case 1:
                            statusText = "已下单";
                            break;
                        case 2:
                            statusText = "已发货";
                            break;
                        case 3:
                            statusText = "已签收";
                            break;
                        case 4:
                            statusText = "拒绝签收";
                            break;
                        case 5:
                            statusText = "快件丢失";
                            break;
                    }
                    return statusText;
                },
                goSend: function (row) {
                    this.sendGoodsModel = row;                   
                    this.sendDialogVisible = true;
                },
                submitSendGoods: function () {
                    var _that = this;
                    axios.post("/OrderInfo/SendGoods", _that.sendGoodsModel).then(function (res) {
                        if (res.data.Code == 200) {
                            _that.sendDialogVisible = false;
                            _that.$message({
                                type: 'success',
                                message: res.data.Message
                            });
                        } else { 
                            _that.$message({
                                type: 'error',
                                message: res.data.Message
                            });
                        }                       
                    });
                },
                showKdnInfo: function (row) {
                    var _that = this;
                    KDNWidget.run({
                        serviceType: "B",
                        expCode: _that.kdCodeTransform(row.courierCompany),
                        expNo: row.trackingNo,
                        showType: "pop", /* normal   pop */
                        container: "demoID"
                    })
                },
                kdCodeTransform: function (text) {
                    switch (text) { 
                        case "百世快递":
                            return "HTKY"
                        default:
                            return "";
                    }
                }
            }
        })
    </script>
    <script type="text/javascript">
        (function () { var kdnOptions = { baseUrl: "https://www.kdniao.com/JSInvoke/" }; var utilityService = new KDNUtilitiesService(); function KDNSearchResultService(options) { this.param = options || {}; this.validateData = function () { if (!utilityService.hasProperty(this.param, "expCode") || !utilityService.hasProperty(this.param, "expNo")) return false; if (!utilityService.hasProperty(this.param, "sortType")) this.param.sortType = "DESC"; if (!utilityService.hasProperty(this.param, "color")) this.param.color = "rgb(46,114,251)"; if (this.param.color.substring(0, 3) != "rgb" || this.param.color.substring(0, 3) != "RGB") this.param.color = "rgb(46,114,251)"; return true }; this.excuteProcess = function () { window.location.href = kdnOptions.baseUrl + "MSearchResult.aspx?expCode=" + this.param.expCode + "&expNo=" + this.param.expNo + "&backUrl=" + window.location.href + "&color=" + this.param.color } } function KDNPCSearchResultService(options) { this.param = options || {}; this.validateData = function () { if (!utilityService.hasProperty(this.param, "expCode") || !utilityService.hasProperty(this.param, "expNo") || !utilityService.hasProperty(this.param, "container")) return false; return true }; this.excuteProcess = function () { var _containerID = document.getElementById((this.param.container || "")); var _showType = "normal"; if (this.param.showType == "pop") _showType = "pop"; var iframeSrc = kdnOptions.baseUrl + "SearchResult.aspx?expCode=" + this.param.expCode + "&expNo=" + this.param.expNo; var iframeElement = document.createElement("iframe"); iframeElement.setAttribute("width", "900"); iframeElement.setAttribute("height", "550"); iframeElement.setAttribute("border", "0"); iframeElement.setAttribute("frameborder", "0"); iframeElement.setAttribute("scrolling", "no"); iframeElement.setAttribute("src", iframeSrc); if (_showType == "normal") { _containerID.innerHTML = ""; _containerID.style.display = "block"; _containerID.appendChild(iframeElement) } else { _containerID.innerHTML = ""; _containerID.style.display = "block"; _containerID.setAttribute("class", "kdnlogin-box"); var myhtml = "<div class='kdnlogin-title'>即时查询结果<div class='kdnlogin-close'>关闭</div></div><div class='kdnlogin-content'><iframe width='900' height='550' frameborder='0' scrolling='auto' src='" + iframeSrc + "'> </iframe></div>"; _containerID.innerHTML = myhtml; utilityService.validateReg.addEvent(document.getElementsByClassName("kdnlogin-close")[0], "click", function () { _containerID.style.removeProperty("display"); _containerID.style.display = "none"; _containerID.innerHTML = "" }, this) } } } function KDNSearchTrackService(options) { this.param = options || {}; this.validateData = function () { if (!utilityService.hasProperty(this.param, "sortType")) this.param.sortType = "DESC"; if (!utilityService.hasProperty(this.param, "color")) this.param.color = "rgb(46,114,251)"; return true }; this.excuteProcess = function () { window.location.href = kdnOptions.baseUrl + "MSearchTrack.aspx?backUrl=" + window.location.href + "&sortType=" + this.param.sortType + "&color=" + this.param.color } } function KDNPCSearchTrackService(options) { this.param = options || {}; this.validateData = function () { if (!utilityService.hasProperty(this.param, "container")) { return false } return true }; this.excuteProcess = function () { var targetContainer = document.getElementById(this.param.container); if (!targetContainer) { console.error("请传入一个容器div"); return false } targetContainer.style.width = "1015px"; targetContainer.style.height = "810px"; targetContainer.style.margin = "0px auto"; var iframeHtml = "<iframe frameborder='0' width='1012' height='780' scrolling='auto' src='" + kdnOptions.baseUrl + "SearchTrack.aspx'></iframe>"; targetContainer.innerHTML = iframeHtml } } function KDNOnlineOrderService(options) { this.param = options || {}; this.validateData = function () { if (!utilityService.hasProperty(this.param, "sortType")) this.param.sortType = "DESC"; if (!utilityService.hasProperty(this.param, "color")) this.param.color = "rgb(46,114,251)"; return true }; this.excuteProcess = function () { window.location.href = kdnOptions.baseUrl + "MOnlineOrder.aspx?backUrl=" + window.location.href + "&sortType=" + this.param.sortType + "&color=" + this.param.color } } function KDNPCOnlineOrderService(options) { this.param = options || {}; this.validateData = function () { if (!utilityService.hasProperty(this.param, "container")) { return false } return true }; this.excuteProcess = function () { var targetContainer = document.getElementById(this.param.container); if (!targetContainer) { console.error("请传入一个容器div"); return false } targetContainer.style.width = "1015px"; targetContainer.style.height = "705px"; targetContainer.style.margin = "0px auto"; var iframeHtml = "<iframe frameborder='0' width='1012' height='700' scrolling='auto' src='" + kdnOptions.baseUrl + "OnlineOrder.aspx'></iframe>"; targetContainer.innerHTML = iframeHtml } } function KDNUtilitiesService() { this.hasProperty = function (object, property) { return object.hasOwnProperty(property) || (property in object) }; this.validateReg = { checkNum: function (targetValue) { return new RegExp("^[0-9]*$").test(targetValue) }, addEvent: function (elm, evType, fn, useCapture) { if (elm.addEventListener) { elm.addEventListener(evType, fn, useCapture); return true } else if (elm.attachEvent) { var r = elm.attachEvent('on' + evType, fn); return r } else { elm['on' + evType] = fn; } } } } function Widget(options) { this.customerOptions = options || {}; this.validateOptions = function () { var _customerOptions = this.customerOptions; var _utilitiesService = this.utilitiesService; if ((typeof _customerOptions) === 'object' && _utilitiesService.hasProperty(_customerOptions, "serviceType")) { var selectType = _customerOptions.serviceType || ""; switch (selectType) { case "A": this.currentService = new KDNSearchResultService(_customerOptions); break; case "B": this.currentService = new KDNPCSearchResultService(_customerOptions); break; case "C": this.currentService = new KDNSearchTrackService(_customerOptions); break; case "D": this.currentService = new KDNPCSearchTrackService(_customerOptions); break; case "E": this.currentService = new KDNOnlineOrderService(_customerOptions); break; case "F": this.currentService = new KDNPCOnlineOrderService(_customerOptions); break; default: console.error("没有此类型的服务，请对照快递鸟官网（http://www.kdniao.com/）相关api修改后重试"); break }this.isValidateParam = this.currentService.validateData() } else { console.error("调用快递鸟外部调用功能缺少必要参数，请对照快递鸟官网（http://www.kdniao.com/）相关api修改后重试") } return this }; this.isValidateParam = false; this.currentService = null; this.utilitiesService = new KDNUtilitiesService(); this.runer = function () { if (this.isValidateParam) { this.currentService.excuteProcess() } return this } } var api = { run: function (opts) { var w = new Widget(opts); w.validateOptions().runer() } }; this.KDNWidget = api })();

        window.onload = function () {
            
        };
    </script>
}
