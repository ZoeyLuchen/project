
<html>
<head>
    <meta charset="UTF-8" />
    <meta content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no" id="viewport" name="viewport">
    <meta name="format-detection" content="telephone=notelphone=no, email=no" />
    <meta name="description" content="" />
    <meta name="keywords" content="" />
    <link rel="shortcut icon" href="../favicon.ico" type="image/x-icon" />
    <meta name="apple-touch-fullscreen" content="yes" /><!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 -->
    <meta name="apple-mobile-web-app-status-bar-style" content="black" /><!-- 设置苹果工具栏颜色:默认值为 default，可以定为 black和 black-translucent-->
    <meta http-equiv="Cache-Control" content="no-siteapp" /><!-- 不让百度转码 -->
    <meta name="HandheldFriendly" content="true"><!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 -->
    <meta name="MobileOptimized" content="320"><!-- 微软的老式浏览器 -->
    <meta name="screen-orientation" content="portrait"><!-- uc强制竖屏 -->
    <meta name="x5-orientation" content="portrait"><!-- QQ强制竖屏 -->
    <meta name="browsermode" content="application"><!-- UC应用模式 -->
    <meta name="x5-page-mode" content="app"><!-- QQ应用模式 -->
    <meta name="msapplication-tap-highlight" content="no"><!-- windows phone 点击无高光 -->
    <meta name="apple-mobile-web-app-capable" content="yes"><!-- ios 开启对web app程序的支持 -->
    <meta name="apple-mobile-web-app-status-bar-style" content="black"><!-- ios 改变顶部状态条的颜色 -->
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
    <link rel="stylesheet" href="~/css/site.css" />
    <script type="text/javascript" src="~/lib/vue-v2.6.8.min.js"></script>
    @RenderSection("Css", required: false)
</head>
<body>
    <div class="sys-header" id="headerApp">
        <span>退出登录</span>
    </div>
    <div class="sys-aside" id="asideApp">
        <el-menu :default-active="activeIndex"
                 class="el-menu-demo"
                 v-on:select="handleSelect">
            <el-menu-item index="1">首页</el-menu-item>
            <el-submenu index="2">
                <template slot="title">
                    基础信息管理
                </template>
                <el-menu-item index="2-1">品牌管理</el-menu-item>
                <el-menu-item index="2-2">品类管理</el-menu-item>
                <el-menu-item index="2-3">客户管理</el-menu-item>
            </el-submenu>
            <el-menu-item index="3">商品管理</el-menu-item>
            <el-menu-item index="4">订单管理</el-menu-item>
            <el-menu-item index="5">报表管理</el-menu-item>
            <el-submenu index="6">
                <template slot="title">
                    系统管理
                </template>
                <el-menu-item index="6-1">角色管理</el-menu-item>
                <el-menu-item index="6-2">权限管理</el-menu-item>
                <el-menu-item index="6-3">用户管理</el-menu-item>
            </el-submenu>
        </el-menu>
    </div>
    <div class="sys-mian" id="app">
        <div class="content" id="contentDiv">
            @RenderBody()
        </div>       
    </div>



    <script type="text/javascript" src="~/lib/axios.min.js"></script>
    <script type="text/javascript" src="~/js/site.js"></script>
    <script src="https://unpkg.com/element-ui/lib/index.js"></script>
    <script type="text/javascript" src="~/js/qs.js"></script>
    <script type="text/javascript">
        var asideApp = new Vue({
            el: "#asideApp",
            data: {
                activeIndex: '1'
            },
            mounted: function () {
                this.$nextTick(function () {

                });
            },
            methods: {
                handleSelect(index, indexPath) {
                    let url = "";
                    switch (index) {
                        case "1":
                            url = "/Home/home";
                            break;
                        case "2-1":
                            url = "/GoodsBrand/Index";
                            break;
                        default:
                            url = "/Home/home";
                            break;
                    }

                    this.urlJump(url);
                },
                urlJump(url) {
                    document.location.href = url;
                }
            }
        });

        var headerApp = new Vue({
            el: "#headerApp",
            data: {
                activeIndex: '1'
            },
            mounted: function () {
                this.$nextTick(function () {

                });
            },
            methods: {               
            }
        })
    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>
