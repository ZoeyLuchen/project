@*@{
        Layout = null;
    }*@
@{
    ViewBag.Title = "订单管理";
}

<h2 class="page-title">
    <i class="shuxian"></i>
    <span>订单管理<i></i></span>
</h2>
<div class="mb20">
    品牌名称：
    <el-input placeholder="客户姓名|电话" v-model="clientName" class="input220 mr20"></el-input>
    下单时间：
    <el-date-picker v-model="orderCreateTime"
                    type="daterange"
                    range-separator="至"
                    start-placeholder="开始日期"
                    end-placeholder="结束日期">
    </el-date-picker>

    <el-button type="primary" class="mr30" v-on:click="search">搜索</el-button>
</div>
<div>
    <el-table :data="tableData" stripe class="tableList">
        <el-table-column type="index" label="序号" width="80"></el-table-column>
        <el-table-column prop="clientName" label="客户姓名" width=""></el-table-column>
        <el-table-column prop="clientPhone" label="客户电话" width=""></el-table-column>
        <el-table-column prop="createTime" label="下单时间" width=""></el-table-column>
        <el-table-column label="是否打印" width="">
            <template slot-scope="scope">
                {{scope.row.isPrint==0?"未打印":"已打印"}}
            </template>
        </el-table-column>
        <el-table-column label="操作" width="120">
            <template slot-scope="scope">
                <el-popover placement="left" width="400" trigger="click">
                    <el-table :data="orderGoodsList" stripe class="tableList">
                        <el-table-column prop="goodsName" label="商品名称"></el-table-column>
                        <el-table-column prop="gsName" label="商品规格"></el-table-column>
                        <el-table-column prop="goodsNum" label="数量"></el-table-column>
                    </el-table>
                    <i class="el-icon-s-operation mr20" slot="reference" v-on:click="getOrderGoodsList(scope.row.id)" title="查看"></i>
                </el-popover>

                <i class="el-icon-delete" v-on:click="del(scope.row)" title="删除"></i>
            </template>
        </el-table-column>
    </el-table>
    <el-pagination v-on:size-change="handleSizeChange"
                   class="pagination"
                   v-on:current-change="handleCurrentChange"
                   :current-page.sync="pageIndex"
                   :page-size="pageSize"
                   layout="prev, pager, next, jumper"
                   :total="total">
    </el-pagination>
</div>

@section Scripts{
    <script type="text/javascript">
        var that;
        var app = new Vue({
            el: "#app",
            data: {
                clientName: "",
                orderCreateTime: "",
                tableData: [],
                pageIndex: 1,
                pageSize: 10,
                total: 0,
                orderGoodsList: []
            },
            mounted: function () {
                asideApp.activeIndex = "4";
                this.$nextTick(e => {
                    that = this;
                    that.searchList();
                });
            },
            methods: {
                search() {
                    that.pageIndex = 1;
                    that.searchList();
                },
                searchList() {
                    axios.get("/OrderInfo/SearchListByPage", {
                        params: {
                            clientName: that.clientName,
                            beginDate: that.orderCreateTime == null ? "" : that.orderCreateTime[0],
                            endDate: that.orderCreateTime == null ? "" : that.orderCreateTime[1],
                            pageIndex: that.pageIndex,
                            pageSize: that.pageSize
                        }
                    }).then(res => {
                        if (res.status == 200) {
                            res.data.items.forEach(e => {
                                e.createTime = dateFtt(e.createTime);
                            })
                            that.tableData = res.data.items;
                            that.total = res.data.totalCount;
                        }
                    })
                },
                getOrderGoodsList(id) {
                    axios.get("/OrderInfo/getOrderGoodsList", {
                        params: {
                            orderId: id
                        }
                    }).then(res => {
                        if (res.status == 200) {
                            that.orderGoodsList = res.data;
                        }
                    })
                },
                del(item) {
                    this.$confirm('确认删除该订单吗？', '确认信息', {
                        distinguishCancelAndClose: true,
                        confirmButtonText: '确认',
                        cancelButtonText: '放弃'
                    }).then(() => {
                        axios.post("/OrderInfo/DelOrderInfo", item).then(res => {
                            if (res.status == 200 && res.data.code == 200) {
                                that.$message.success("删除成功")
                                that.searchList();
                            } else {
                                that.$message.error("删除失败")
                            }
                        })
                    });
                },
                handleSizeChange(pageIndex) {
                    that.pageIndex = pageIndex;
                    that.searchList();
                },
                handleCurrentChange(pageIndex) {
                    that.pageIndex = pageIndex;
                    that.searchList();
                }
            }
        })
    </script>
}
